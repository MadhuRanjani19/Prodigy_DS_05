# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ttpMZV2nDmZSI_qZlHSXASjuDceSwXUz
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud

# Load the dataset
df = pd.read_csv('/content/output.csv')  # Adjust path if needed

# Show column names for reference
print("Columns:", df.columns.tolist())

# Optional: convert 'Time' column to datetime if it exists
if 'Time' in df.columns:
    df['Hour'] = pd.to_datetime(df['Time'], errors='coerce').dt.hour

# === 1. Accidents by Hour of Day ===
if 'Hour' in df.columns:
    plt.figure(figsize=(10, 5))
    sns.histplot(df['Hour'].dropna(), bins=24, kde=False, color='tomato')
    plt.title('üïí Accidents by Hour of Day')
    plt.xlabel('Hour')
    plt.ylabel('Accident Count')
    plt.grid(True, linestyle='--', alpha=0.4)
    plt.show()

# === 2. Accidents by Weather Condition ===
if 'Weather_Condition' in df.columns:
    plt.figure(figsize=(12, 6))
    top_weather = df['Weather_Condition'].value_counts().nlargest(10)
    sns.barplot(x=top_weather.values, y=top_weather.index, palette='coolwarm')
    plt.title('üå¶Ô∏è Top 10 Weather Conditions During Accidents')
    plt.xlabel('Accident Count')
    plt.ylabel('Weather Condition')
    plt.show()

# === 3. Accidents by Road Condition ===
road_columns = [col for col in df.columns if 'Road' in col and 'Condition' in col]
for col in road_columns:
    plt.figure(figsize=(10, 4))
    sns.countplot(data=df, y=col, order=df[col].value_counts().index, palette='Set2')
    plt.title(f'üõ£Ô∏è Accidents by {col}')
    plt.xlabel('Accident Count')
    plt.tight_layout()
    plt.show()

# === 4. Accident Hotspots (Requires Latitude and Longitude) ===
if {'Latitude', 'Longitude'}.issubset(df.columns):
    plt.figure(figsize=(8, 6))
    sns.scatterplot(data=df, x='Longitude', y='Latitude', alpha=0.3, s=10, color='red')
    plt.title('üìç Accident Hotspots')
    plt.xlabel('Longitude')
    plt.ylabel('Latitude')
    plt.grid(True, linestyle='--', alpha=0.3)
    plt.tight_layout()
    plt.show()
else:
    print("No Latitude/Longitude columns found for hotspot visualization.")

# === 5. Word Cloud of Accident Descriptions (Optional) ===
if 'Description' in df.columns:
    all_text = ' '.join(df['Description'].dropna().astype(str))
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(all_text)

    plt.figure(figsize=(10, 5))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title('üìù Word Cloud of Accident Descriptions')
    plt.show()

    data = {
    'Accident_ID': range(1, 16),
    'Date': pd.date_range(start='2024-06-01', periods=15, freq='D'),
    'Time': ['08:00', '12:00', '18:00', '22:00', '14:00',
             '09:30', '16:00', '11:00', '07:30', '20:00',
             '13:00', '17:30', '10:00', '19:00', '15:30'],
    'Weather_Condition': ['Clear', 'Rain', 'Fog', 'Clear', 'Snow',
                          'Rain', 'Clear', 'Fog', 'Clear', 'Snow',
                          'Rain', 'Clear', 'Fog', 'Clear', 'Snow'],
    'Road_Condition': ['Dry', 'Wet', 'Wet', 'Dry', 'Icy',
                       'Wet', 'Dry', 'Wet', 'Dry', 'Icy',
                       'Wet', 'Dry', 'Wet', 'Dry', 'Icy'],
    'Latitude': [12.97, 12.96, 12.95, 12.94, 12.97,
                 12.98, 12.99, 12.95, 12.96, 12.97,
                 12.93, 12.92, 12.91, 12.90, 12.99],
    'Longitude': [77.59, 77.60, 77.61, 77.62, 77.59,
                  77.58, 77.57, 77.61, 77.60, 77.59,
                  77.63, 77.64, 77.65, 77.66, 77.57],
}
df = pd.DataFrame(data)
df['DateTime'] = pd.to_datetime(df['Date'].astype(str) + ' ' + df['Time'])
df['Hour'] = df['DateTime'].dt.hour
print("Dataset:\n", df)

plt.figure(figsize=(8,5))
sns.countplot(x='Weather_Condition', data=df)
plt.title("Accidents by Weather Condition")
plt.show()

plt.figure(figsize=(8,5))
sns.countplot(x='Road_Condition', data=df)
plt.title("Accidents by Road Condition")
plt.show()

plt.figure(figsize=(8,5))
sns.histplot(df['Hour'], bins=6, kde=False)
plt.title("Accidents by Time of Day")
plt.xlabel("Hour of the Day")
plt.ylabel("Accident Count")
plt.show()

plt.figure(figsize=(8,6))
plt.scatter(df['Longitude'], df['Latitude'], color='red', alpha=0.7)
plt.title("Accident Hotspots")
plt.xlabel("Longitude")
plt.ylabel("Latitude")
plt.show()